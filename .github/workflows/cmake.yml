name: CMake

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ "*" ]
  release:
    type: [created, edited]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: RelWithDebInfo

jobs:
  build-mac:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
    
    - name: Configure Cmake
    working-directory: ${{github.workspace}}/src
    run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
    
    -name: Build
    working-directory: ${{github.workspace}}/src
    run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
    
    -uses: actions/upload-artifact@v3
    with:
      name: binaries
      path: ${{github.workspace}}/build/*.xpl
      if-no-files-found: error
      
  build-win:
    runs-on: windows-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Configure Cmake
      working-directory: ${{github.workspace}}/src
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
      
      - name: Build
      run: cmake --build .
      
      - uses: actions/upload-artifact@v3
      with:
        name: binaries
        path: ${{github.workspace}}/build/*.xpl
        if-no-files-found: error
        
  build-lin:
    runs-on: ubuntu-latest
     
    steps:
    - uses: actions/checkout@v3
     
    - name: Install other dependancies
    run: |
      sudo apt-get update
      sudo apt-get install -y --no-install-recommends freeglut3-dev libudev-dev libopenal-dev
       
    - name: Configure CMake
      working-directory: ${{github.workspace}}/src
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
       
    - name: Build
      working-directory: ${{github.workspace}}/src
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}            
     
    - uses: actions/upload-artifact@v3
      with:
        name: binaries
        path: ${{github.workspace}}/build/*.xpl
        if-no-files-found: error


  package:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@v3
        with:
          name: binaries
          path: FlyWithLua/64

      - uses: actions/upload-artifact@v3
        with:
          name: FlyWithLua_plugin
          path: |
            ${{github.workspace}}/FlyWithLua*
          if-no-files-found: error

      - name: Create plugin archive
        if: github.event_name == 'release'
        run: zip -r FlyWithLua_NG_Lin_Mac_Win.zip FlyWithLua/

      - name: Upload binaries to release
        if: github.event_name == 'release'
        uses: svenstaro/upload-release-action@v3
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: FlyWithLua_NG_Lin_Mac_Win.zip
          tag: ${{ github.ref }}
          overwrite: true
