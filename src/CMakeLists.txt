set(CMAKE_CXX_STANDARD 14)


set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DXPLM200=1 -DXPLM210=1 -DXPLM300=1 -DXPLM301=1")
if(WIN32)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DAPL=0 -DIBM=1 -DLIN=0")
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DWIN64 -DNDEBUG -D_WINDOWS -D_MBCS -D_USRDLL -DCustomCommands_EXPORTS")
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DSIMDATA_EXPORTS -DUSE_EXTERNAL_ALLOCATOR -DCREATECOMPLETEEDITION")
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -O3 -Wshadow -Wfloat-equal -pedantic -w -std=c++11 -fexceptions -fpermissive")
elseif(APPLE)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DAPL=1 -DIBM=0 -DLIN=0 -DCREATECOMPLETEEDITION")
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -Werror -fPIC -Wno-reorder")
elseif(UNIX)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DAPL=0 -DIBM=0 -DLIN=1 -DCREATECOMPLETEEDITION")
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fvisibility=hidden -std=gnu++11 -fpermissive -O2 -Wall -W -D_REENTRANT -fPIC")
endif()


# X-Plane plugin
if(WIN32)
	add_library(FlyWithLua SHARED FlyWithLua.cpp FloatingWindows/FLWIntegration.cpp FloatingWindows/ImGUIIntegration.cpp FloatingWindows/FloatingWindow.cpp imgui/imgui.cpp imgui/imgui_demo.cpp imgui/imgui_draw.cpp imgui/imgui_lua_bindings.cpp hidapi/windows/hid.c)
elseif(APPLE)
	add_library(FlyWithLua SHARED FlyWithLua.cpp FloatingWindows/FLWIntegration.cpp FloatingWindows/ImGUIIntegration.cpp FloatingWindows/FloatingWindow.cpp imgui/imgui.cpp imgui/imgui_demo.cpp imgui/imgui_draw.cpp imgui/imgui_lua_bindings.cpp hidapi/mac/hid.c)
elseif(UNIX)
	add_library(FlyWithLua SHARED FlyWithLua.cpp FloatingWindows/FLWIntegration.cpp FloatingWindows/ImGUIIntegration.cpp FloatingWindows/FloatingWindow.cpp imgui/imgui.cpp imgui/imgui_demo.cpp imgui/imgui_draw.cpp imgui/imgui_lua_bindings.cpp hidapi/linux/hid.c)
endif()


if(WIN32)
	target_link_libraries(FlyWithLua --shared -static -static-libgcc -static-libstdc++ setupapi XPLM_64 XPWidgets_64 lua51 OpenGL32 glut64 OpenAL32)
elseif(APPLE)
	link_directories("/opt/XSDK/Libraries/Mac")
	target_link_libraries(FlyWithLua "-framework XPLM")
elseif(UNIX)
	target_link_libraries(FlyWithLua -Wl,-rpath=./Resources/plugins/FlyWithLua/64 -Wl,-rpath=./Resources/plugins/FlyWithLua/Modules -static-libgcc -static-libstdc++ -ldl -Wl,--version-script -Wl,${CMAKE_SOURCE_DIR}/src/flywithlua.sym LuaXML_lib_64 glut ${CMAKE_SOURCE_DIR}/src/linux_libs/luajit/64/libluajit-5.1.a -lGLU -lGL -ludev)
endif()


if(WIN32)
	set_target_properties(FlyWithLua PROPERTIES PREFIX "")
	set_target_properties(FlyWithLua PROPERTIES OUTPUT_NAME "win")
	set_target_properties(FlyWithLua PROPERTIES SUFFIX ".xpl")
elseif(APPLE)
	set_target_properties(FlyWithLua PROPERTIES PREFIX "")
	set_target_properties(FlyWithLua PROPERTIES OUTPUT_NAME "mac")
	set_target_properties(FlyWithLua PROPERTIES SUFFIX ".xpl")
elseif(UNIX)
	set_target_properties(FlyWithLua PROPERTIES PREFIX "")
	set_target_properties(FlyWithLua PROPERTIES OUTPUT_NAME "lin")
	set_target_properties(FlyWithLua PROPERTIES SUFFIX ".xpl")
endif()
