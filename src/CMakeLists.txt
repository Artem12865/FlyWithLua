cmake_minimum_required(VERSION 3.9)
project(FlyWithLua VERSION 2.7.1 DESCRIPTION "FlyWithLua X-Plane plugin")

set(CMAKE_CXX_STANDARD 14)

include_directories("${CMAKE_SOURCE_DIR}/XPSDK301/CHeaders/Widgets")
include_directories("${CMAKE_SOURCE_DIR}/XPSDK301/CHeaders/Wrappers")
include_directories("${CMAKE_SOURCE_DIR}/XPSDK301/CHeaders/XPLM")
include_directories("${CMAKE_SOURCE_DIR}/include64")
include_directories("${CMAKE_SOURCE_DIR}/hidapi")
include_directories("${CMAKE_SOURCE_DIR}/OpenAL")
include_directories("${CMAKE_SOURCE_DIR}/.")
include_directories("${CMAKE_SOURCE_DIR}/FloatingWindows")
include_directories("${CMAKE_SOURCE_DIR}/imgui")

if(WIN32)
	include_directories("${CMAKE_SOURCE_DIR}/GLUT_for_Windows")
endif(WIN32)

if(WIN32)
	link_directories("${CMAKE_SOURCE_DIR}/XPSDK301/Libraries/Win")
	link_directories("${CMAKE_SOURCE_DIR}/include64")
	link_directories("${CMAKE_SOURCE_DIR}/GLUT_for_Windows")

endif(WIN32)

if(APPLE)
	link_directories("${CMAKE_SOURCE_DIR}/mac_libs")    
elseif(UNIX)
	link_directories("${CMAKE_SOURCE_DIR}/linux_libs/luaXML/64")
	link_directories("${CMAKE_SOURCE_DIR}/linux_libs/glut/64")
endif()


set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DXPLM200=1 -DXPLM210=1 -DXPLM300=1 -DXPLM301=1")
if(WIN32)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DAPL=0 -DIBM=1 -DLIN=0 -DCREATECOMPLETEEDITION -DWIN64 -DNDEBUG -D_WINDOWS")
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -D_MBCS -D_USRDLL -DCustomCommands_EXPORTS -DSIMDATA_EXPORTS")
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DUSE_EXTERNAL_ALLOCATOR -std=c++11 -fexceptions -fpermissive")
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -O3 -Wshadow -Wfloat-equal -pedantic -Wall -Wno-unused -Wno-terminate")
elseif(APPLE)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DAPL=1 -DIBM=0 -DLIN=0 -DCREATECOMPLETEEDITION -mmacosx-version-min=10.10")
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -Wno-unused -fPIC -O3 -DMACOSX -isysroot /home/bill/X-Plane_OsxCrossBuild/osxcross/target/SDK/MacOSX10.11.sdk")
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fvisibility=hidden -std=c++11 -stdlib=libc++ -fexceptions -fpermissive -Wshadow -Wfloat-equal -pedantic")
elseif(UNIX)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DAPL=0 -DIBM=0 -DLIN=1 -DCREATECOMPLETEEDITION -D_REENTRANT -std=gnu++11")
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fvisibility=hidden -fpermissive -O3 -Wall -Wno-unused -Wno-terminate -W -fPIC")
endif()


# X-Plane plugin
if(WIN32)
	add_library(FlyWithLua SHARED FlyWithLua.cpp FloatingWindows/FLWIntegration.cpp FloatingWindows/ImGUIIntegration.cpp FloatingWindows/FloatingWindow.cpp imgui/imgui.cpp imgui/imgui_demo.cpp imgui/imgui_draw.cpp imgui/imgui_lua_bindings.cpp hidapi/windows/hid.c)
elseif(APPLE)
	add_library(FlyWithLua SHARED FlyWithLua.cpp FloatingWindows/FLWIntegration.cpp FloatingWindows/ImGUIIntegration.cpp FloatingWindows/FloatingWindow.cpp imgui/imgui.cpp imgui/imgui_demo.cpp imgui/imgui_draw.cpp imgui/imgui_lua_bindings.cpp hidapi/mac/hid.c)
elseif(UNIX)
	add_library(FlyWithLua SHARED FlyWithLua.cpp FloatingWindows/FLWIntegration.cpp FloatingWindows/ImGUIIntegration.cpp FloatingWindows/FloatingWindow.cpp imgui/imgui.cpp imgui/imgui_demo.cpp imgui/imgui_draw.cpp imgui/imgui_lua_bindings.cpp hidapi/linux/hid.c)
endif()


if(WIN32)
	target_link_libraries(FlyWithLua --shared -static -static-libgcc -static-libstdc++ setupapi XPLM_64 XPWidgets_64 lua51 OpenGL32 glut64 OpenAL32)
elseif(APPLE)
	link_directories("/opt/XSDK/Libraries/Mac")
	target_link_libraries(FlyWithLua "-framework XPLM -mmacosx-version-min=10.10 -isysroot /home/bill/X-Plane_OsxCrossBuild/osxcross/target/SDK/MacOSX10.11.sdk -flat_namespace -undefined suppress -shared -static -static-libgcc -static-libstdc++ -undefined dynamic_lookup -single_module -framework IOKit -framework CoreFoundation -framework GLUT -framework OpenGL -framework Cocoa -ldl -exported_symbols_list /home/bill/xp11_FlyWithLua_NG_plugin/FlyWithLua_NG_Builder/src/flywithlua.sym_mac /home/bill/xp11_FlyWithLua_NG_plugin/FlyWithLua_NG_Builder/src/mac_libs/libluajit-5.1.a")
elseif(UNIX)
	target_link_libraries(FlyWithLua -Wl,-rpath=./Resources/plugins/FlyWithLua/64 -Wl,-rpath=./Resources/plugins/FlyWithLua/Modules -static-libgcc -static-libstdc++ -ldl -Wl,--version-script -Wl,${CMAKE_SOURCE_DIR}/flywithlua.sym LuaXML_lib_64 glut ${CMAKE_SOURCE_DIR}/linux_libs/luajit/64/libluajit-5.1.a -lGLU -lGL -ludev)
endif()


if(WIN32)
	set_target_properties(FlyWithLua PROPERTIES PREFIX "")
	set_target_properties(FlyWithLua PROPERTIES OUTPUT_NAME "win")
	set_target_properties(FlyWithLua PROPERTIES SUFFIX ".xpl")
elseif(APPLE)
	set_target_properties(FlyWithLua PROPERTIES PREFIX "")
	set_target_properties(FlyWithLua PROPERTIES OUTPUT_NAME "mac")
	set_target_properties(FlyWithLua PROPERTIES SUFFIX ".xpl")
elseif(UNIX)
	set_target_properties(FlyWithLua PROPERTIES PREFIX "")
	set_target_properties(FlyWithLua PROPERTIES OUTPUT_NAME "lin")
	set_target_properties(FlyWithLua PROPERTIES SUFFIX ".xpl")
endif()
